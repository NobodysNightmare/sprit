%h1= CarLog.model_name.human(count: 2)

%table.table
  %thead
    %tr
      %th= CarLog.human_attribute_name(:time)
      %th= CarLog.human_attribute_name(:distance)
      %th= Refuel.human_attribute_name(:units_used)
      %th= t('.consumption')
      %th= t('.cost_per_unit')
      %th= Refuel.human_attribute_name(:cost)

  - @logs.each do |log|
    - refuels_by_fuel = log.refuels.group_by(&:fuel)
    %tr
      %td= l(log.time)
      %td= "#{human_number log.distance} km"
      %td
        - refuels_by_fuel.each do |fuel, refuels|
          .fuel-type= "#{human_number refuels.sum(&:units_used)} #{fuel.unit}"
      %td
        - refuels_by_fuel.each do |fuel, refuels|
          .fuel-type= "#{human_number(100 * refuels.sum(&:units_used) / log.distance)} #{fuel.unit}/100km"
      %td
        - refuels_by_fuel.each do |fuel, refuels|
          - if refuels.sum(&:units_used).zero?
            .fuel-type= "#{human_number(0.0, max_precision: 3)} €/#{fuel.unit}"
          - else
            .fuel-type= "#{human_number(refuels.sum(&:cost) / refuels.sum(&:units_used), max_precision: 3)} €/#{fuel.unit}"
      %td
        - refuels_by_fuel.each do |fuel, refuels|
          .fuel-type= "#{human_number refuels.sum(&:cost)} €"

= paginate(@logs)
